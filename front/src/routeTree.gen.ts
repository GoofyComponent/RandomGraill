/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestImport } from './routes/test'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthWheelsImport } from './routes/_auth/wheels'
import { Route as AuthHomepageImport } from './routes/_auth/homepage'
import { Route as AuthAccountImport } from './routes/_auth/account'
import { Route as AuthWheelsIndexImport } from './routes/_auth/wheels/index'

// Create/Update Routes

const TestRoute = TestImport.update({
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthWheelsRoute = AuthWheelsImport.update({
  path: '/wheels',
  getParentRoute: () => AuthRoute,
} as any)

const AuthHomepageRoute = AuthHomepageImport.update({
  path: '/homepage',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAccountRoute = AuthAccountImport.update({
  path: '/account',
  getParentRoute: () => AuthRoute,
} as any)

const AuthWheelsIndexRoute = AuthWheelsIndexImport.update({
  path: '/',
  getParentRoute: () => AuthWheelsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/_auth/account': {
      id: '/_auth/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AuthAccountImport
      parentRoute: typeof AuthImport
    }
    '/_auth/homepage': {
      id: '/_auth/homepage'
      path: '/homepage'
      fullPath: '/homepage'
      preLoaderRoute: typeof AuthHomepageImport
      parentRoute: typeof AuthImport
    }
    '/_auth/wheels': {
      id: '/_auth/wheels'
      path: '/wheels'
      fullPath: '/wheels'
      preLoaderRoute: typeof AuthWheelsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/wheels/': {
      id: '/_auth/wheels/'
      path: '/'
      fullPath: '/wheels/'
      preLoaderRoute: typeof AuthWheelsIndexImport
      parentRoute: typeof AuthWheelsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({
    AuthAccountRoute,
    AuthHomepageRoute,
    AuthWheelsRoute: AuthWheelsRoute.addChildren({ AuthWheelsIndexRoute }),
  }),
  LoginRoute,
  TestRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/login",
        "/test"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/account",
        "/_auth/homepage",
        "/_auth/wheels"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/test": {
      "filePath": "test.tsx"
    },
    "/_auth/account": {
      "filePath": "_auth/account.tsx",
      "parent": "/_auth"
    },
    "/_auth/homepage": {
      "filePath": "_auth/homepage.tsx",
      "parent": "/_auth"
    },
    "/_auth/wheels": {
      "filePath": "_auth/wheels.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/wheels/"
      ]
    },
    "/_auth/wheels/": {
      "filePath": "_auth/wheels/index.tsx",
      "parent": "/_auth/wheels"
    }
  }
}
ROUTE_MANIFEST_END */
